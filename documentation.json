{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-4ddf65b9a1b61d7f59e03a3aea3211770db8f65b8d00c5bc441f1171ad01171d1ca7ed56c0275ebcf0938d1b4c592e2c8c58b78c0939b1161e01c6eb075635f8",
            "file": "src/app/services/auth.service.ts",
            "properties": [
                {
                    "name": "cookieService",
                    "defaultValue": "inject(CookieService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "TOKEN_KEY",
                    "defaultValue": "'auth_token'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly TOKEN_KEY = 'auth_token';\n\n  private router = inject(Router);\n  private cookieService = inject(CookieService);\n\n  login(username: string, password: string): boolean {\n    if (username === 'root' && password === 'root') {\n      this.cookieService.set(this.TOKEN_KEY, 'mock-token', 1);\n      return true;\n    }\n    return false;\n  }\n\n  logout(): void {\n    this.cookieService.delete(this.TOKEN_KEY);\n    this.router.navigate(['/login']);\n  }\n\n  isLoggedIn(): boolean {\n    return this.cookieService.check(this.TOKEN_KEY);\n  }\n\n  getToken(): string | null {\n    return this.cookieService.get(this.TOKEN_KEY);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "StrapiService",
            "id": "injectable-StrapiService-66c205f2a803b4c69e23ac70bf34000017f9f25d7b39361b4835a96116d351854269886e8815e44e47b01f9c6ab735d9d8d4f926176f5fee5cd2ba02fffee0ab",
            "file": "src/app/services/strapi-service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:1337'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getPosts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({ \n    providedIn: 'root'\n})\n\nexport class StrapiService {\n    private apiUrl = 'http://localhost:1337';  \n\n    constructor(private http: HttpClient) {}\n\n    getPosts(): Observable<any> {\n        return this.http.get(`${this.apiUrl}/api/restaurants)`);\n    }\n}\n\n    ",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-4b2635fdfd444ee6020a31081b739a0026013e15b76b03ca7d52d220b39bd500941c7b64d37b1026f1ac98a473a1ef930da59d5042c9068eca588e2b56d1f1df",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'client'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'client';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet />\n"
        },
        {
<<<<<<< HEAD
            "name": "ContactUsComponent",
            "id": "component-ContactUsComponent-a6345ddd2c305a539d11f91a7692c52ad7b2d6f9b60412184bd72631849da7c69cdf6dbe3954ad188b907ce807c3fdd113c0f261f1a1550d56826d19872688b0",
            "file": "src/app/components/shared/contact-us/contact-us.component.ts",
=======
            "name": "ArticleFeedbackComponent",
            "id": "component-ArticleFeedbackComponent-c71fd25d421033c216f6b81fce40e89b9b5454924638f5ba12e2c8279b41e9936fb35cecb39bd7b14a782322aed57e51e999587bff7d3eb9d2a3c46cea7cbc97",
            "file": "src/app/components/shared/article-feedback/article-feedback.component.ts",
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
<<<<<<< HEAD
            "selector": "app-contact-us",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./contact-us.component.html"
=======
            "selector": "app-article-feedback",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./article-feedback.component.html"
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
<<<<<<< HEAD
            "propertiesClass": [],
=======
            "propertiesClass": [
                {
                    "name": "onNoClick",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onYesClick",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
<<<<<<< HEAD
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-contact-us',\n  standalone: true,\n  imports: [MatCardModule, MatChipsModule, MatButtonModule, MatIconModule],\n  templateUrl: './contact-us.component.html',\n  styleUrl: './contact-us.component.scss',\n})\nexport class ContactUsComponent {}\n",
            "styleUrl": "./contact-us.component.scss",
=======
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-article-feedback',\n  standalone: true,\n  imports: [],\n  templateUrl: './article-feedback.component.html',\n  styleUrl: './article-feedback.component.scss'\n})\nexport class ArticleFeedbackComponent {\n  public onYesClick = () => {\n    alert(\"On Yes Action triggered\");\n  }\n  public onNoClick = () => {\n    alert(\"On No Action triggered\");\n  }\n\n}\n",
            "styleUrl": "./article-feedback.component.scss",
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
<<<<<<< HEAD
            "templateData": "<mat-card class=\"mat-typography contact-us-container\">\n  <button mat-raised-button class=\"need-help-button\">\n    <div class=\"button-content\">\n      <mat-icon class=\"mail-icon mr1\">mail</mat-icon>\n      <div class=\"section\">\n        <span class=\"row centered\">\n          <mat-icon class=\"mail-icon mr1\">mail</mat-icon>\n          <div class=\"button-text mr1\">Need more help?</div>\n        </span>\n\n        <span class=\"row centered\">\n          <div class=\"link mr1\">Contact us</div>\n          <mat-icon class=\"go-icon\">chevron_right</mat-icon>\n        </span>\n      </div>\n      <mat-icon class=\"go-icon\">chevron_right</mat-icon>\n    </div>\n  </button>\n</mat-card>\n"
=======
            "templateData": "\n<div class=\"feedback-container\">\n    <div class=\"article-feedback\">\n        <div class=\"article-title-container\">\n            <div class=\"icon-holder\">\n                <object data=\"./../../../../assets/icons/common/note-stack-icon.svg\" width=\"22\" height=\"22\"> \n                </object>\n            </div>\n            <h2 class=\"article-title-bg\">Was this article helpful?</h2>\n            <h3 class=\"article-title-mb\">Was this article helpful?</h3>\n        </div>\n        <div class=\"feedback-buttons-container\">\n            <button class=\"feedback-button\" (click)=\"onYesClick()\">Yes</button>\n            <button class=\"feedback-button\" (click)=\"onNoClick()\">No</button>\n        </div>\n    </div>\n</div>"
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-cba87678dd525c7bc7afe502883563c29699673e8febdefcbd841abb22c51f80468d696974a8c369096f902d66807548bb37416127b9aa48169f4701d91aea47",
            "file": "src/app/components/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
<<<<<<< HEAD
                    "line": 16,
=======
                    "line": 35,
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
<<<<<<< HEAD
                    "line": 17,
=======
                    "line": 36,
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
<<<<<<< HEAD
                    "line": 19,
=======
                    "line": 38,
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ContactUsComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { ContactUsComponent } from '../shared/contact-us/contact-us.component';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [ContactUsComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\nexport class DashboardComponent {\n  private authService = inject(AuthService);\n  private router = inject(Router);\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n",
            "styleUrl": "./dashboard.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>dashboard works!</p>\n\n<button (click)=\"logout()\">Logout</button>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-45c8b21a5a2ef5cf17ae1b254643c95bbfb68df2b2dbdf9576d82f26b32394b40ce2c65fddbb0993969ae88e7e8eb00383f6d3be1b4f3d629bd15bb495a23d29",
            "file": "src/app/components/shared/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport {MatDividerModule} from '@angular/material/divider';\n\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [MatDividerModule],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n  private router = inject(Router);\n\n  constructor() {}\n\n  ngOnInit(): void {\n\n  }\n\n\n}",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "extends": [],
            "templateData": "<footer class=\"footer\">\n    <nav class=\"navigation\">\n        <ul>\n            <li>Cookie Settings</li>\n            <li>Contact Us</li>\n            <li>Privacy Policy</li>\n            <li>Regulatory Disclosures</li>\n        </ul>\n    </nav>\n    <mat-divider class=\"divider\" [vertical]=\"true\"></mat-divider>\n    <div class=\"sm-container\">\n        <small>Copyright © 2024 Paysafe Holdings UK Limited. All rights reserved. Paysafe Financial Services Limited (FRN:900015)</small>\n    </div>\n</footer>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-b5e7cf8e851cb255e128562c2589004b1e5ed8d64b5016039b97857964063dc0fed7da044fd5ed7bf502f4126e1c379982c5a285799a3c80a669cef8c4df45b6",
            "file": "src/app/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [
                "\n      .error {\n        color: red;\n      }\n    "
            ],
            "template": "<div>\n  <h2>Login</h2>\n  <form (ngSubmit)=\"onLogin()\">\n    <input\n      type=\"text\"\n      [(ngModel)]=\"username\"\n      name=\"username\"\n      placeholder=\"Username\"\n      required\n    />\n    <input\n      type=\"password\"\n      [(ngModel)]=\"password\"\n      name=\"password\"\n      placeholder=\"Password\"\n      required\n    />\n    <button type=\"submit\">Login</button>\n  </form>\n  <p *ngIf=\"loginFailed\" class=\"error\">\n    Invalid credentials. Please try again.\n  </p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loginFailed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "password",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "username",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div>\n      <h2>Login</h2>\n      <form (ngSubmit)=\"onLogin()\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"username\"\n          name=\"username\"\n          placeholder=\"Username\"\n          required\n        />\n        <input\n          type=\"password\"\n          [(ngModel)]=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <p *ngIf=\"loginFailed\" class=\"error\">\n        Invalid credentials. Please try again.\n      </p>\n    </div>\n  `,\n  styles: [\n    `\n      .error {\n        color: red;\n      }\n    `,\n  ],\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  loginFailed: boolean = false;\n\n  private authService = inject(AuthService);\n  private router = inject(Router);\n\n  onLogin(): void {\n    const isLoggedIn = this.authService.login(this.username, this.password);\n    if (isLoggedIn) {\n      this.router.navigate(['/dashboard']);\n    } else {\n      this.loginFailed = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .error {\n        color: red;\n      }\n    \n",
            "extends": []
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-a662779557f78d80caf5dfc2075a256ef22e5303102775a34ce60614af9c7c22aec5631dce885ff7b0e31995648e20714fab75b26b604f304ad5e866609f6a1c",
            "file": "src/app/components/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  standalone: true,\n  imports: [],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.scss',\n})\nexport class PageNotFoundComponent {}\n",
            "styleUrl": "./page-not-found.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>page-not-found works!</p>\n"
        },
        {
            "name": "RelatedArticlesComponent",
            "id": "component-RelatedArticlesComponent-a09033875218d19e18e88c9cf6406f8d6ad2d046b964cb58312581ed8033198e365263b869ae60038ba45bff9f9f86629c5bd9c761eb8f40f25347f10273acab",
            "file": "src/app/components/shared/related-articles/related-articles.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-related-articles",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./related-articles.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onClickViewMore",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "relatedLinks",
                    "defaultValue": "[\n    {\n      \"title\": \"Paysafe Glossary of Payment Terms for Merchants\",\n      \"link\": \"#\"\n    },\n    {\n      \"title\": \"Accept payments with Tap to Pay on iPhone\",\n      \"link\": \"#\"\n    },\n    {\n      \"title\": \"Set up and edit transfer options\",\n      \"link\": \"#\"\n    },\n    {\n      \"title\": \"Chargeback Guide\",\n      \"link\": \"#\"\n    }\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-related-articles',\n  standalone: true,\n  imports: [],\n  templateUrl: './related-articles.component.html',\n  styleUrl: './related-articles.component.scss'\n})\nexport class RelatedArticlesComponent {\n  public relatedLinks: any[] = [\n    {\n      \"title\": \"Paysafe Glossary of Payment Terms for Merchants\",\n      \"link\": \"#\"\n    },\n    {\n      \"title\": \"Accept payments with Tap to Pay on iPhone\",\n      \"link\": \"#\"\n    },\n    {\n      \"title\": \"Set up and edit transfer options\",\n      \"link\": \"#\"\n    },\n    {\n      \"title\": \"Chargeback Guide\",\n      \"link\": \"#\"\n    }\n];\n  public onClickViewMore = () =>{\n    alert(\"View more clicked\");\n  }\n}\n",
            "styleUrl": "./related-articles.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"related-articles-container\">\n    <div class=\"related-title-container\">\n        <div class=\"icon-holder\">\n            <object data=\"../../../../assets/icons/common/note-stack-icon.svg\" width=\"22\" height=\"22\"> \n            </object>\n        </div>\n        <h2 class=\"related-title-bg\">Related articles</h2>\n        <h3 class=\"related-title-mb\">Related articles</h3>\n    </div>\n    <div class=\"related-articles-content\">\n        <div class=\"related-links-container\">\n            @for (relatedLink of relatedLinks; track relatedLink.title) {\n                <a class=\"link-element\" href=\"{{relatedLink.link}}\">\n                    <span class=\"related-link\">{{ relatedLink.title }}</span>\n                    <object data=\"../../../../assets/icons/common/arrow-outward-icon.svg\" width=\"18\" height=\"18\"> </object>\n                </a>\n            }      \n        </div>\n        <button class=\"view-more-btn\" (click)=\"onClickViewMore()\">\n            View More\n            <object data=\"../../../../assets/icons/common/arrow-forward-icon.svg\" width=\"16\" height=\"16\"> </object>\n        </button>\n    </div>\n</div>"
        },
        {
            "name": "SearchComponentComponent",
            "id": "component-SearchComponentComponent-82da727b2092e7e1c3c8a33760db7b65e8ae89ad56cc1e0c14924c73ad4882fb5903aa88c9db6b92709430c32c6b4ba64f1dc9615bab79778725c631fc2a24d0",
            "file": "src/app/components/shared/search-component/search-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search-component.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search-component',\n  standalone: true,\n  imports: [],\n  templateUrl: './search-component.component.html',\n  styleUrl: './search-component.component.scss'\n})\nexport class SearchComponentComponent {\n\n}\n",
            "styleUrl": "./search-component.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>search-component works!</p>\n"
        },
        {
            "name": "TabsBarComponent",
            "id": "component-TabsBarComponent-50cd0b310ba5bbf6449cce9bacb52e8f3ba8fd563e31b205ce415d341d4f607cd0bc94b72992544f670065dbd6987e25454444471b931e8b70153ba09c41ebc6",
            "file": "src/app/components/dashboard/features/tabs-bar/tabs-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tabs-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs-bar',\n  standalone: true,\n  imports: [],\n  templateUrl: './tabs-bar.component.html',\n  styleUrl: './tabs-bar.component.scss'\n})\nexport class TabsBarComponent {\n\n}\n",
            "styleUrl": "./tabs-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>tabs-bar works!</p>\n"
        },
        {
            "name": "TopBarComponent",
            "id": "component-TopBarComponent-a732a57417cf0180923aa0678a61f0135adc065cf2442c541ab6b5b1f40af3ad9f64f704078cb9accadab9cd6ed31a7fa640cfc9aebeddc163fb790ce20b874f",
            "file": "src/app/components/shared/top-bar/top-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./top-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLang",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\n\n@Component({\n  selector: 'app-top-bar',\n  standalone: true,\n  imports: [MatButtonModule,MatDividerModule,MatIconModule],\n  templateUrl: './top-bar.component.html',\n  styleUrl: './top-bar.component.scss'\n})\nexport class TopBarComponent {\n  private router = inject(Router);\n\n  constructor() {}\n\n  ngOnInit(): void {\n\n  }\n\n  onLogin() {\n    //Login logic here \n    //link to login page\n    this.router.navigate(['/dashboard']);\n    console.log('login button clicked');\n  }\n\n  onLang() {\n    //Language/region logic here\n    console.log('language button clicked');\n  }\n\n}\n",
            "styleUrl": "./top-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "extends": [],
            "templateData": "<header class=\"header\">\n    <div class=\"logo\">\n        <img src=\"../../../../assets/icons/top-bar/Optic_Logo_White.svg\" \n        alt=\"Optic Logo\">\n    </div>\n    <nav class=\"navigation\">\n        <div class=\"button-container\">\n            <button mat-button (click)=\"onLogin()\" class=\"rh-button login-button\">Login</button>\n            <mat-divider class=\"divider\" [vertical]=\"true\"></mat-divider>\n            <button mat-icon-button color=\"primary\" class=\"rh-button language-button\" (click)=\"onLang()\" aria-label=\"Language/Region Button\">\n                <!--instead of \"language\" below want captive-portal -->\n                <mat-icon class=\"language-icon\">language</mat-icon>\n            </button>\n            \n        </div>\n    </nav>\n</header>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideHttpClient(withInterceptors([authInterceptor])), provideAnimationsAsync('noop'),\n  ],\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isLoggedIn()) {\n    return true; // Allow navigation if logged in\n  }\n\n  // Redirect to the login page if not logged in\n  router.navigate(['/login']);\n  return false; // Prevent navigation\n}"
            },
            {
                "name": "authInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interceptors/auth.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n\n  const authReq = token\n    ? req.clone({\n        setHeaders: { Authorization: `Bearer ${token}` },\n      })\n    : req;\n\n  return next(authReq);\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
<<<<<<< HEAD
                "file": "src/stories/contact-us.component.stories.ts",
=======
                "file": "src/stories/article-feedback.component.stories.ts",
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dashboard.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page-not-found.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/related-article.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-component.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/top-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
<<<<<<< HEAD
                "file": "src/stories/contact-us.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  component: ContactUsComponent,\n  props: args,\n})"
=======
                "file": "src/stories/article-feedback.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  props: args,\n})"
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dashboard.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  component: FooterComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page-not-found.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/related-article.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  component: RelatedArticlesComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-component.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  component: SearchComponentComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/top-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\n  component: TopBarComponent,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideHttpClient(withInterceptors([authInterceptor])), provideAnimationsAsync('noop'),\n  ],\n}"
                }
            ],
            "src/app/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isLoggedIn()) {\n    return true; // Allow navigation if logged in\n  }\n\n  // Redirect to the login page if not logged in\n  router.navigate(['/login']);\n  return false; // Prevent navigation\n}"
                }
            ],
            "src/app/interceptors/auth.interceptor.ts": [
                {
                    "name": "authInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interceptors/auth.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n\n  const authReq = token\n    ? req.clone({\n        setHeaders: { Authorization: `Bearer ${token}` },\n      })\n    : req;\n\n  return next(authReq);\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
                }
            ],
<<<<<<< HEAD
            "src/stories/contact-us.component.stories.ts": [
=======
            "src/stories/article-feedback.component.stories.ts": [
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
<<<<<<< HEAD
                    "file": "src/stories/contact-us.component.stories.ts",
=======
                    "file": "src/stories/article-feedback.component.stories.ts",
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
<<<<<<< HEAD
                    "file": "src/stories/contact-us.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  component: ContactUsComponent,\n  props: args,\n})"
=======
                    "file": "src/stories/article-feedback.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                }
            ],
            "src/stories/dashboard.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dashboard.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dashboard.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/footer.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  component: FooterComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/login.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/page-not-found.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page-not-found.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page-not-found.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/related-article.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/related-article.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/related-article.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  component: RelatedArticlesComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/search-component.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-component.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-component.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  component: SearchComponentComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/top-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/top-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/top-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\n  component: TopBarComponent,\n  props: args,\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dashboard/features/tabs-bar/tabs-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
<<<<<<< HEAD
                "filePath": "src/app/components/shared/contact-us/contact-us.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactUsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
=======
                "filePath": "src/app/components/shared/article-feedback/article-feedback.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticleFeedbackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/search-component/search-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/top-bar/top-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interceptors/auth.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/strapi-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StrapiService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
<<<<<<< HEAD
                "filePath": "src/stories/contact-us.component.stories.ts",
=======
                "filePath": "src/stories/article-feedback.component.stories.ts",
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
<<<<<<< HEAD
                "filePath": "src/stories/contact-us.component.stories.ts",
=======
                "filePath": "src/stories/article-feedback.component.stories.ts",
>>>>>>> 0d54bd04e51432666a0d86b83e531f5b5744762c
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dashboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dashboard.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/footer.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/footer.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page-not-found.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page-not-found.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/related-article.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/related-article.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-component.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-component.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/top-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/top-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}